# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## Complete Changes
{{#each releases}}
  {{#if href}}
    ## [{{title}}]({{href}}){{#if tag}} - {{isoDate}}{{/if}}
  {{else}}
    ## {{title}}{{#if tag}} - {{isoDate}}{{/if}}
  {{/if}}

  {{#if summary}}
    {{summary}}
  {{/if}}

  {{#if merges}}
    ### Merged

    {{#each merges}}
      - {{#if commit.breaking}}**Breaking change:** {{/if}}{{message}} {{#if href}}[`#{{id}}`]({{href}}){{/if}}
    {{/each}}
  {{/if}}

  {{#if fixes}}
    ### Fixed

    {{#each fixes}}
      - {{#if commit.breaking}}**Breaking change:** {{/if}}{{commit.subject}}{{#each fixes}} {{#if href}}[`#{{id}}`]({{href}}){{/if}}{{/each}}
    {{/each}}
  {{/if}}

  {{#commit-list commits heading='### Commits'}}
    - {{#if breaking}}**Breaking change:** {{/if}}{{subject}} {{#if href}}[`{{shorthash}}`]({{href}}){{/if}}
  {{/commit-list}}

{{/each}}

====

{{#unless options.hideCredit}}
  Reloaded changelogs are generated by [`auto-changelog`](https://github.com/CookPete/auto-changelog) ðŸ˜‡.
{{/unless}}

## Major Release (1.20) Highlights

No super fancy changelog with screenshots this time around; too much work on my plate unfortunately.  

- Added: Complete overhaul of the mod downloading experience.  
- Added: *Trimming* to all remaining libraries in mod loader. Almost all unused code is now eliminated.  
- Added: Support for translating the Reloaded Process Menu.  
- Added: Option to skip Wine related launch warnings in Reloaded config.  
- Added: Support for resolving symbolic links when adding application.  
- Added: Public NuGet packages for more Reloaded internal APIs, e.g. Mod Updates, Update Package creation.  
- Added: Ability to include README(s) and Changelog(s) inside published packages [incl. NuGet].  
- Added: Ability to run `Reloaded.Installer` GUI-less [in case of Linux troubleshooting].  
- Added: Response caching to all web requests to improve performance where possible.  
- Added: Ability to cache images downloaded from the internet.  
- Added: Ability to search for mods through bot-build 'search index' for instant mod searching.  
- Added: Support for downloading `Sounds` from GameBanana.  
- Added: Tooltips to help end users in the `Publish Mod' dialog.  
- Added: Crash handler to help developers debug issues when the game crashes outside of mod code.  
- Added: Support for embedding icons into NuGet packages.  
- Added: Support for Assembly Trimming [remove unused code!!] in Mod Template.  
- Added: Support for displaying changelogs in mod update menu.  
- Added: Support for individually enabling/disabling which mods you want to update.  
- Added: Ability to include a `Project Website` with your mod.  

- Improved: Mod search speed, it is now instant for supported games.  
- Improved: Number of displayed items in Downloads menu. Now displays 500 items per page.  
- Improved: All Web API calls [requests to servers] now use compression when possible.  
- Improved: Controller input logic. Now cursor should move better to your expectation with a stronger bias on closer elements.  
- Improved: Loader startup performance through re-introducing ReadyToRun.  
- Improved: Launcher RAM usage after startup.  Reloaded Launcher should have a working set of <100MB during normal use now.  
- Improved: Linux (Wine) support to give more useful, clear and up to date information on process launch.  
- Improved: Reduced the number of DLLs in Loader output to improve performance when booting after a fresh Windows reboot.  
- Improved: *Trimming* support in Mod Template. Mod template will now automatically trim all libraies where `IsTrimmable == true` when trimming is enabled.  
- Improved: Speed of first web request. Reloaded now determines Proxy settings at boot time to ensure it does not slow down execution later.  
- Improved: Startup time by asynchronously checking for Reloaded Bootstrapper updates.  
- Improved: Page creation performance through replacement of IoC container.  
- Improved: Overall UI performance by disabling WPF UI automation.  
- Improved: Lowered memory allocation during idle time in launcher by reducing allocations performed by controller library.  
- Improved: Wiki documentation for Releases, Linux info.  

- Fixed: Hiding exit button in dialogue boxes will no longer hide exit button in main window.  
- Fixed: GitHub resolver not being used while searching for dependencies (oops!).  
- Fixed: Bug where a searching for mods returns the result of previous search when typing fast.    
- Fixed: A questionable 'by-design' WPF memory leak.  
- Fixed: Empty strings in some parts of the UI should no longer unintentionally leave reserved space.
- Fixed: Bug where downloads still kept running in the background if user exited the download dialog.  

- Changed: *Reloaded Process Menu* (click on process in processes list) now displays user friendly Mod Name instead of Mod Id.  
- Changed: Ninject to IoC.Container to improve performance in launcher when loading new pages.  
- Changed: Reloaded Loader's server code has been separated out to a separate mod.  
